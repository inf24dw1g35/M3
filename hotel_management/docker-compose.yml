version: "3.8"

services:
  mysql:
    container_name: m3_mysql-hotel
    build:
      context: ./DB/init-db
      dockerfile: Dockerfile.mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: hotel
    volumes:
      - ./DB/init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 40s
      timeout: 10s

  node:
    container_name: m3_node-app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3000:3000"
    working_dir: /home/node/app
    volumes:
      - .:/home/node/app
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: hotel
      MYSQL_USER: root
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      retries: 5
      start_period: 60s
      timeout: 5s
    user: "node"

#  react-admin:
#    container_name: m3_react-admin
#    build:
#      context: ./react-admin
#      dockerfile: Dockerfile.react
#    depends_on:
#      node:
#        condition: service_healthy
#    ports:
#      - "3001:3000"
#    working_dir: /app
#    volumes:
#      - ./react-admin:/app
#    environment:
#      CHOKIDAR_USEPOLLING: "true"
#      NODE_ENV: "development"
#    command: ["npm", "start"]
