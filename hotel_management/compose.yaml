services:
  mysql:
    image: mysql:8.0
    container_name: m3_mysql-hotel
    build:
      context: ./init-db
      dockerfile: Dockerfile.mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: hotel
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  node:
    image: node:18
    container_name: m3_node-app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "3000:3000"
    working_dir: /home/node/app
    volumes:
      - .:/home/node/app
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: hotel
      MYSQL_USER: root
      MYSQL_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 5s

  react-admin:
    image: node:18
    container_name: m3_react-admin
    build:
      context: ./react-admin
      dockerfile: Dockerfile.react
    depends_on:
      node:
        condition: service_healthy
    ports:
      - "3001:3000"
    working_dir: /app
    volumes:
      - ./react-admin:/app
      - /app/node_modules # Evita problemas com sobrescrita de node_modules
    environment:
      CHOKIDAR_USEPOLLING: "true"
    command: ["npm", "start"]